class Solution {
    public int solution(int n) {
        if (n % 2 != 0) return 0;
        long[] dp = new long[n + 1];
        //짝수 번째에서만 타일링이 가능하다
        //짝수번째 증가할 때 마다 타일링의 개수가 2가 증가한다.
        //2씩 증가하기 때문에 점화식은 다음과 같아 f(n) = f(2) * f(n - 2) + sum(2*f(4~n)) + 2
        dp[2] = 3;
        dp[4] = dp[2] * dp[2] + 2;
        
        for (int i = 6; i <= n; i += 2) {
            
            dp[i] = dp[2] * dp[i - 2];
            for (int j = i - 4; j >= 2; j -= 2) {
                dp[i] += dp[j] * 2;
            }
            dp[i] += 2;
            dp[i] %= 1000000007;
            
        }
        return dp[n];
    }
}
